// <auto-generated />
using System;
using Docius.Repository.EinBiss;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Docius.API.Migrations.EinBiss
{
    [DbContext(typeof(EinBissContext))]
    [Migration("20250219230818_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Cardapio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("cardapios");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.CategoriaIngrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("categorias_ingredientes");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.CategoriaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CardapioId")
                        .HasColumnType("integer")
                        .HasColumnName("cardapio_id");

                    b.Property<int>("CategoriaProdutoSuperiorId")
                        .HasColumnType("integer")
                        .HasColumnName("categoria_produto_superior_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("CardapioId");

                    b.HasIndex("CategoriaProdutoSuperiorId");

                    b.ToTable("categorias_produtos");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.DecoracaoBolo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("CollorCake")
                        .HasColumnType("boolean")
                        .HasColumnName("collor_cake");

                    b.Property<bool>("FloresNaturais")
                        .HasColumnType("boolean")
                        .HasColumnName("flores_naturais");

                    b.Property<byte[]>("Foto")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("foto");

                    b.Property<bool>("GlowCake")
                        .HasColumnType("boolean")
                        .HasColumnName("glow_cake");

                    b.Property<bool>("Metalizado")
                        .HasColumnType("boolean")
                        .HasColumnName("metalizado");

                    b.Property<bool>("NakedCake")
                        .HasColumnType("boolean")
                        .HasColumnName("naked_cake");

                    b.HasKey("Id");

                    b.ToTable("decoracoes_bolos");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.DecoracaoBoloPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Foto")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("foto");

                    b.HasKey("Id");

                    b.ToTable("decoracoes_bolos_pedidos");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.DecoracaoBoloPedidoPersonalizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DecoracaoBoloPedidoId")
                        .HasColumnType("integer")
                        .HasColumnName("decoracao_bolo_pedido_id");

                    b.Property<int>("PersonalizacaoId")
                        .HasColumnType("integer")
                        .HasColumnName("personalizacao_id");

                    b.HasKey("Id");

                    b.HasIndex("DecoracaoBoloPedidoId");

                    b.HasIndex("PersonalizacaoId");

                    b.ToTable("decoracoes_bolos_pedidos_personalizacoes");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Endereco")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Site")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("site");

                    b.HasKey("Id");

                    b.ToTable("fornecedores");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Gasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.ToTable("gastos");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaIngredienteId")
                        .HasColumnType("integer")
                        .HasColumnName("categoria_ingrediente_id");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer")
                        .HasColumnName("fornecedor_id");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("marca");

                    b.Property<decimal>("Medida")
                        .HasColumnType("numeric")
                        .HasColumnName("medida");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric")
                        .HasColumnName("preco");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<int>("UnidadeMedidaId")
                        .HasColumnType("integer")
                        .HasColumnName("unidade_medida_id");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaIngredienteId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("UnidadeMedidaId");

                    b.ToTable("ingredientes");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHoraEntrega")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_hora_entrega");

                    b.Property<int>("StatusPedidoId")
                        .HasColumnType("integer")
                        .HasColumnName("status_pedido_id");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("StatusPedidoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("pedidos");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.PedidoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PedidoId")
                        .HasColumnType("integer")
                        .HasColumnName("pedido_id");

                    b.Property<int>("PersonalizacaoId")
                        .HasColumnType("integer")
                        .HasColumnName("personalizacao_id");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer")
                        .HasColumnName("produto_id");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<int>("StatusPedidoProdutoId")
                        .HasColumnType("integer")
                        .HasColumnName("status_pedido_produto_id");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("PersonalizacaoId")
                        .IsUnique();

                    b.HasIndex("ProdutoId");

                    b.HasIndex("StatusPedidoProdutoId");

                    b.ToTable("pedidos_produtos");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Personalizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)")
                        .HasColumnName("descricao");

                    b.HasKey("Id");

                    b.ToTable("personalizacoes");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Precificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("PorcentagemLucroEstimada")
                        .HasColumnType("numeric")
                        .HasColumnName("porcentagem_lucro_estimada");

                    b.Property<decimal>("PorcentagemLucroObtida")
                        .HasColumnType("numeric")
                        .HasColumnName("porcentagem_lucro_obtida");

                    b.Property<int>("QtdHorasMensais")
                        .HasColumnType("integer")
                        .HasColumnName("qtd_horas_mensais");

                    b.Property<int>("QtdMesesConsiderarGastos")
                        .HasColumnType("integer")
                        .HasColumnName("qtd_meses_considerar_gastos");

                    b.Property<decimal>("ValorBruto")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_bruto");

                    b.Property<decimal>("ValorInsumos")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_insumos");

                    b.Property<decimal>("ValorLiquido")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_liquido");

                    b.Property<decimal>("ValorSalario")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_salario");

                    b.HasKey("Id");

                    b.ToTable("precificacoes");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaProdutoId")
                        .HasColumnType("integer")
                        .HasColumnName("categoria_produto_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric")
                        .HasColumnName("preco");

                    b.Property<int>("ReceitaId")
                        .HasColumnType("integer")
                        .HasColumnName("receita_id");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaProdutoId");

                    b.HasIndex("ReceitaId");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<int>("PrecificacaoId")
                        .HasColumnType("integer")
                        .HasColumnName("precificacao_id");

                    b.Property<int>("QtdPorcoes")
                        .HasColumnType("integer")
                        .HasColumnName("qtd_porcoes");

                    b.Property<TimeOnly>("Tempo")
                        .HasColumnType("time without time zone")
                        .HasColumnName("tempo");

                    b.HasKey("Id");

                    b.HasIndex("PrecificacaoId")
                        .IsUnique();

                    b.ToTable("receitas");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.ReceitaCategoriaIngrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaIngredienteId")
                        .HasColumnType("integer")
                        .HasColumnName("categoria_ingrediente_id");

                    b.Property<decimal>("Medida")
                        .HasColumnType("numeric")
                        .HasColumnName("medida");

                    b.Property<int>("ReceitaId")
                        .HasColumnType("integer")
                        .HasColumnName("receita_id");

                    b.Property<int>("UnidadeMedidaId")
                        .HasColumnType("integer")
                        .HasColumnName("unidade_medida_id");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaIngredienteId");

                    b.HasIndex("ReceitaId");

                    b.HasIndex("UnidadeMedidaId");

                    b.ToTable("receitas_categorias_ingredientes");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.StatusPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("status_pedidos");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.StatusPedidoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("status_pedidos_produtos");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("tipos_usuarios");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.UnidadeMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("sigla");

                    b.HasKey("Id");

                    b.ToTable("unidades_medidas");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("login");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("senha");

                    b.Property<int>("TipoUsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.CategoriaProduto", b =>
                {
                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.Cardapio", "Cardapio")
                        .WithMany("CategoriaProduto")
                        .HasForeignKey("CardapioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.CategoriaProduto", "CategoriaProdutoSuperior")
                        .WithMany("CategoriaProdutoInferior")
                        .HasForeignKey("CategoriaProdutoSuperiorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cardapio");

                    b.Navigation("CategoriaProdutoSuperior");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.DecoracaoBoloPedidoPersonalizacao", b =>
                {
                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.DecoracaoBoloPedido", "DecoracaoBoloPedido")
                        .WithMany("DecoracaoBoloPedidoPersonalizacao")
                        .HasForeignKey("DecoracaoBoloPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.Personalizacao", "Personalizacao")
                        .WithMany("DecoracaoBoloPedidoPersonalizacao")
                        .HasForeignKey("PersonalizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DecoracaoBoloPedido");

                    b.Navigation("Personalizacao");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Ingrediente", b =>
                {
                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.CategoriaIngrediente", "CategoriaIngrediente")
                        .WithMany("Ingrediente")
                        .HasForeignKey("CategoriaIngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.Fornecedor", "Fornecedor")
                        .WithMany("Ingrediente")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.UnidadeMedida", "UnidadeMedida")
                        .WithMany("Ingrediente")
                        .HasForeignKey("UnidadeMedidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaIngrediente");

                    b.Navigation("Fornecedor");

                    b.Navigation("UnidadeMedida");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Pedido", b =>
                {
                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.StatusPedido", "StatusPedido")
                        .WithMany("Pedido")
                        .HasForeignKey("StatusPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.Usuario", "Usuario")
                        .WithMany("Pedido")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatusPedido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.PedidoProduto", b =>
                {
                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.Pedido", "Pedido")
                        .WithMany("PedidoProduto")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.Personalizacao", "Personalizacao")
                        .WithOne("PedidoProduto")
                        .HasForeignKey("Docius.Repository.EinBiss.Entities.Models.PedidoProduto", "PersonalizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.Produto", "Produto")
                        .WithMany("PedidoProduto")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.StatusPedidoProduto", "StatusPedidoProduto")
                        .WithMany("PedidoProduto")
                        .HasForeignKey("StatusPedidoProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Personalizacao");

                    b.Navigation("Produto");

                    b.Navigation("StatusPedidoProduto");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Produto", b =>
                {
                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.CategoriaProduto", "CategoriaProduto")
                        .WithMany("Produto")
                        .HasForeignKey("CategoriaProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.Receita", "Receita")
                        .WithMany("Produto")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaProduto");

                    b.Navigation("Receita");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Receita", b =>
                {
                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.Precificacao", "Precificacao")
                        .WithOne("Receita")
                        .HasForeignKey("Docius.Repository.EinBiss.Entities.Models.Receita", "PrecificacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Precificacao");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.ReceitaCategoriaIngrediente", b =>
                {
                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.CategoriaIngrediente", "CategoriaIngrediente")
                        .WithMany("ReceitaCategoriaIngrediente")
                        .HasForeignKey("CategoriaIngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.Receita", "Receita")
                        .WithMany("ReceitaCategoriaIngrediente")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.UnidadeMedida", "UnidadeMedida")
                        .WithMany("ReceitaCategoriaIngrediente")
                        .HasForeignKey("UnidadeMedidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaIngrediente");

                    b.Navigation("Receita");

                    b.Navigation("UnidadeMedida");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Usuario", b =>
                {
                    b.HasOne("Docius.Repository.EinBiss.Entities.Models.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Cardapio", b =>
                {
                    b.Navigation("CategoriaProduto");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.CategoriaIngrediente", b =>
                {
                    b.Navigation("Ingrediente");

                    b.Navigation("ReceitaCategoriaIngrediente");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.CategoriaProduto", b =>
                {
                    b.Navigation("CategoriaProdutoInferior");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.DecoracaoBoloPedido", b =>
                {
                    b.Navigation("DecoracaoBoloPedidoPersonalizacao");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Fornecedor", b =>
                {
                    b.Navigation("Ingrediente");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Pedido", b =>
                {
                    b.Navigation("PedidoProduto");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Personalizacao", b =>
                {
                    b.Navigation("DecoracaoBoloPedidoPersonalizacao");

                    b.Navigation("PedidoProduto");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Precificacao", b =>
                {
                    b.Navigation("Receita");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Produto", b =>
                {
                    b.Navigation("PedidoProduto");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Receita", b =>
                {
                    b.Navigation("Produto");

                    b.Navigation("ReceitaCategoriaIngrediente");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.StatusPedido", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.StatusPedidoProduto", b =>
                {
                    b.Navigation("PedidoProduto");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.UnidadeMedida", b =>
                {
                    b.Navigation("Ingrediente");

                    b.Navigation("ReceitaCategoriaIngrediente");
                });

            modelBuilder.Entity("Docius.Repository.EinBiss.Entities.Models.Usuario", b =>
                {
                    b.Navigation("Pedido");
                });
#pragma warning restore 612, 618
        }
    }
}
